
import 'package:json_annotation/json_annotation.dart'; // Import json_annotation
// Import the new repository
part 'task_model.g.dart'; // Generated by build_runner

enum SyncStatus {
  pending,
  synced,
  failed
}

// Helper to convert SyncStatus to String for Hive, as Hive doesn't support enums directly without TypeAdapter
String syncStatusToString(SyncStatus status) => status.toString().split('.').last;
SyncStatus stringToSyncStatus(String statusStr) => SyncStatus.values.firstWhere((e) => e.toString().split('.').last == statusStr, orElse: () => SyncStatus.pending);

@JsonSerializable() // Add this annotation
class TaskModel {
  late String id; // Using cosObjectKey


  late String name;

  late String path; // Original local path

  late int size;

  late String formattedSize;

  late String type;

  late String uploadTime; // Timestamp of when it was added/uploaded

  late String sourceLanguage;

  late String targetLanguage;

  late String status; // e.g., "Uploaded", "Processing", "Completed"

  late String cosObjectKey;


  String? downloadUrl;

  
  String? errorMessage;

  late String syncStatusString; // Store as String

  // Getter and Setter for easy enum usage
  SyncStatus get syncStatus => stringToSyncStatus(syncStatusString);
  set syncStatus(SyncStatus status) => syncStatusString = syncStatusToString(status);

  TaskModel({
    required this.id,
    required this.name,
    required this.path,
    required this.size,
    required this.formattedSize,
    required this.type,
    required this.uploadTime,
    required this.sourceLanguage,
    required this.targetLanguage,
    required this.status,
    required this.cosObjectKey,
    this.downloadUrl,
    this.errorMessage,
    SyncStatus initialSyncStatus = SyncStatus.pending, // Default to pending
  }) {
    this.syncStatus = initialSyncStatus;
  }

  factory TaskModel.fromJson(Map<String, dynamic> json) => _$TaskModelFromJson(json);
  Map<String, dynamic> toJson() => _$TaskModelToJson(this);
}